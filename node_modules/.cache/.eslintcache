[{"C:\\Users\\Maddi\\Documents\\GitHub\\PIXL\\src\\index.js":"1","C:\\Users\\Maddi\\Documents\\GitHub\\PIXL\\src\\App.js":"2","C:\\Users\\Maddi\\Documents\\GitHub\\PIXL\\src\\reportWebVitals.js":"3","C:\\Users\\Maddi\\Documents\\GitHub\\PIXL\\src\\components\\TodoList.js":"4","C:\\Users\\Maddi\\Documents\\GitHub\\PIXL\\src\\components\\TodoForm.js":"5","C:\\Users\\Maddi\\Documents\\GitHub\\PIXL\\src\\components\\Todo.js":"6","C:\\Users\\Maddi\\Documents\\GitHub\\PIXL\\src\\components\\ReviewState.js":"7"},{"size":560,"mtime":1665283121203,"results":"8","hashOfConfig":"9"},{"size":646,"mtime":1665286375834,"results":"10","hashOfConfig":"9"},{"size":375,"mtime":1665267143981,"results":"11","hashOfConfig":"9"},{"size":1624,"mtime":1665286149695,"results":"12","hashOfConfig":"9"},{"size":1608,"mtime":1665284311255,"results":"13","hashOfConfig":"9"},{"size":1019,"mtime":1665276601153,"results":"14","hashOfConfig":"9"},{"size":291,"mtime":1665286437707,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1z0c1aa",{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},"C:\\Users\\Maddi\\Documents\\GitHub\\PIXL\\src\\index.js",[],[],"C:\\Users\\Maddi\\Documents\\GitHub\\PIXL\\src\\App.js",[],[],"C:\\Users\\Maddi\\Documents\\GitHub\\PIXL\\src\\reportWebVitals.js",[],[],"C:\\Users\\Maddi\\Documents\\GitHub\\PIXL\\src\\components\\TodoList.js",["40","41"],[],"/* crediting github: briancodex for to do functionality used his components\r\nfrom https://github.com/briancodex/react-todo-app-v1 for to do section of this\r\nreact app */\r\nimport React, {useState} from \"react\";\r\nimport {Link, useNavigate} from \"react-router-dom\";\r\nimport TodoForm from './TodoForm';\r\nimport Todo from './Todo';\r\nimport ReviewState from \"./ReviewState\";\r\n\r\nfunction TodoList() {\r\n  const [todos, setTodos] = useState([]);\r\n  const navigate = useNavigate()\r\n\r\n\r\n  const addTodo = todo => {\r\n    if (!todo.text || /^\\s*$/.test(todo.text)) {\r\n      return;\r\n    }\r\n\r\n    const newTodos = [todo, ...todos];\r\n\r\n    setTodos(newTodos);\r\n    console.log(...todos);\r\n  };\r\n\r\n  const updateTodo = (todoId, newValue) => {\r\n    if (!newValue.text || /^\\s*$/.test(newValue.text)) {\r\n      return;\r\n    }\r\n\r\n    setTodos(prev => prev.map(item => (item.id === todoId ? newValue : item)));\r\n  };\r\n\r\n  const removeTodo = id => {\r\n    const removedArr = [...todos].filter(todo => todo.id !== id);\r\n\r\n    setTodos(removedArr);\r\n  };\r\n\r\n\r\n  const openInNewTab = url => {\r\n    window.open(url, '_blank', 'noopener,noreferrer');\r\n  };\r\n\r\n\r\n  return (\r\n    <>\r\n      <h1>Add your link!</h1>\r\n      <TodoForm onSubmit={addTodo} />\r\n      <Todo\r\n        todos={todos}\r\n        removeTodo={removeTodo}\r\n        updateTodo={updateTodo}\r\n      />\r\n\r\n      <Link \r\n        to={{\r\n          pathname: \"/review\",\r\n          state: {todos}\r\n        }}\r\n        \r\n        \r\n        >\r\n        </Link>\r\n\r\n      <button onClick={\r\n        () => openInNewTab(\"/review\")\r\n        }>Review</button>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default TodoList;\r\n","C:\\Users\\Maddi\\Documents\\GitHub\\PIXL\\src\\components\\TodoForm.js",[],[],"C:\\Users\\Maddi\\Documents\\GitHub\\PIXL\\src\\components\\Todo.js",["42","43","44","45"],[],"/* crediting github: briancodex for to do functionality used his components\r\nfrom https://github.com/briancodex/react-todo-app-v1 for to do section of this\r\nreact app */\r\n\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\nimport TodoForm from './TodoForm';\r\nimport React, {useState} from \"react\";\r\n\r\nconst Todo = ({ todos, completeTodo, removeTodo, updateTodo }) => {\r\n  const [edit, setEdit] = useState({\r\n    id: null,\r\n    value: ''\r\n  });\r\n\r\n  const submitUpdate = value => {\r\n    updateTodo(edit.id, value);\r\n    setEdit({\r\n      id: null,\r\n      value: ''\r\n    });\r\n  };\r\n\r\n  if (edit.id) {\r\n    return <TodoForm edit={edit} onSubmit={submitUpdate} />;\r\n  }\r\n\r\n  return todos.map((todo, index) => (\r\n    <div\r\n      className={todo.isComplete ? 'todo-row complete' : 'todo-row'}\r\n      key={index}\r\n    >\r\n      <div key={todo.id} onClick={() => completeTodo(todo.id)}>\r\n        {todo.text}\r\n      </div>\r\n    </div>\r\n  ));\r\n};\r\n\r\nexport default Todo;\r\n","C:\\Users\\Maddi\\Documents\\GitHub\\PIXL\\src\\components\\ReviewState.js",["46","47"],[],"import { render } from '@testing-library/react';\r\nimport React from 'react'\r\nimport {useLocation} from 'react-router-dom';\r\n\r\nfunction ReviewState(props) {\r\n    return (\r\n        <div>\r\n            <h1>Hi</h1>\r\n        </div>\r\n                \r\n    )        \r\n}\r\n\r\nexport default ReviewState",{"ruleId":"48","severity":1,"message":"49","line":8,"column":8,"nodeType":"50","messageId":"51","endLine":8,"endColumn":19},{"ruleId":"48","severity":1,"message":"52","line":12,"column":9,"nodeType":"50","messageId":"51","endLine":12,"endColumn":17},{"ruleId":"48","severity":1,"message":"53","line":5,"column":8,"nodeType":"50","messageId":"51","endLine":5,"endColumn":16},{"ruleId":"48","severity":1,"message":"54","line":6,"column":27,"nodeType":"50","messageId":"51","endLine":6,"endColumn":33},{"ruleId":"48","severity":1,"message":"55","line":6,"column":35,"nodeType":"50","messageId":"51","endLine":6,"endColumn":40},{"ruleId":"48","severity":1,"message":"56","line":6,"column":42,"nodeType":"50","messageId":"51","endLine":6,"endColumn":46},{"ruleId":"48","severity":1,"message":"57","line":1,"column":10,"nodeType":"50","messageId":"51","endLine":1,"endColumn":16},{"ruleId":"48","severity":1,"message":"58","line":3,"column":9,"nodeType":"50","messageId":"51","endLine":3,"endColumn":20},"no-unused-vars","'ReviewState' is defined but never used.","Identifier","unusedVar","'navigate' is assigned a value but never used.","'ReactDOM' is defined but never used.","'Router' is defined but never used.","'Route' is defined but never used.","'Link' is defined but never used.","'render' is defined but never used.","'useLocation' is defined but never used."]